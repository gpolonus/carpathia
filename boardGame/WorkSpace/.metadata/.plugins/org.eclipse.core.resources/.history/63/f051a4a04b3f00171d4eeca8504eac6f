package game.board;

import java.util.Iterator;

import game.config.SimpleGameConfig;
import game.socket.GameSocket;
import game.space.Space;

public class SimpleBoard extends Board {

	public SimpleBoard(){
		super();
	}
	
	@Override
	protected void makeBoard() {
		GameSocket.log.debug("Setting up the board. NO ONE ELSE SHOULD DO THIS!");
		
		// make the board super fun later but really lame now

		// set up info for the circle map
		int total = 20;
		int radius = (int)(total*70/2/Math.PI);

		// set up loop
		Space temp = makeNewSpace();
		temp.setLocation(radius, 0);
		this.add(temp);
		
		for(int i = 1; i < total; i++)
		{
			temp.addNB(makeNewSpace());
			temp = temp.nbs.get(Space.getCount()-1);
			this.add(temp);
			temp.setLocation((int)(Math.cos(Math.PI*2/total * i)*radius), (int)(Math.sin(Math.PI*2/total * i)*radius));
		}
		board.get(0).addNB(temp);
		temp = board.get(0);
		Space nextTemp;
		for(int i = 1; i < 8; i++)
		{
			nextTemp = makeNewSpace();
			nextTemp.setLocation(radius - radius/4 * i, 0);
			this.add(nextTemp);
			temp.addNB(nextTemp);
			GameSocket.print(temp.x + "; " + temp.y);
			temp = nextTemp;
		}
		temp.addNB(board.get((int)total/2));
	}

	public Space makeNewSpace() {
		return new SimpleGameConfig().makeNewSpace();
	}

	public Space makeNewSpace(int x, int y) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Space makeNewSpace(int id, int x, int y) {
		// TODO Auto-generated method stub
		return null;
	}
}
